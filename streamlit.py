# -*- coding: utf-8 -*-
"""App.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CWufmSD-b0idC_zgLyWqR1EXrFDt4fb0
"""

# Commented out IPython magic to ensure Python compatibility.
# %%writefile datasains.py
# import streamlit as st
# import pandas as pd
# import numpy as np
# import matplotlib.pyplot as plt
# import seaborn as sns
# 
# from sklearn.ensemble import RandomForestClassifier
# from sklearn.model_selection import train_test_split
# from sklearn.preprocessing import StandardScaler
# from sklearn.metrics import accuracy_score
# 
# # Load dataset
# df = pd.read_csv('diabetes.csv')
# 
# # Preprocessing
# X = df.drop('Outcome', axis=1)
# y = df['Outcome']
# 
# scaler = StandardScaler()
# X_scaled = scaler.fit_transform(X)
# 
# X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)
# 
# # Train model
# model = RandomForestClassifier(n_estimators=100, random_state=42)
# model.fit(X_train, y_train)
# 
# # Streamlit Interface
# st.set_page_config(page_title="Diagnosa Diabetes", layout="centered")
# 
# st.image("ubp.png", width=120)
# st.markdown("<h1 style='text-align: center; color: #1976d2;'>Sistem Prediksi Risiko Diabetes</h1>", unsafe_allow_html=True)
# 
# st.sidebar.header("Masukkan Parameter Kesehatan")
# 
# # Ubah teks field agar lebih orisinal
# pregnancies = st.sidebar.slider("Total Kehamilan", 0, 20, 1)
# glucose = st.sidebar.slider("Kadar Glukosa (mg/dL)", 50, 200, 120)
# blood_pressure = st.sidebar.slider("Tekanan Darah (mmHg)", 40, 140, 70)
# skin_thickness = st.sidebar.slider("Ketebalan Lipatan Kulit (mm)", 0, 100, 20)
# insulin = st.sidebar.slider("Kadar Insulin (mu U/mL)", 0, 900, 80)
# BMI = st.sidebar.slider("Indeks Massa Tubuh (BMI)", 10.0, 60.0, 25.0)
# dpf = st.sidebar.slider("Riwayat Keluarga (DPF)", 0.0, 3.0, 0.5)
# age = st.sidebar.slider("Usia Pasien (tahun)", 10, 100, 30)
# 
# # Masukkan data user
# user_data = pd.DataFrame({
#     'Pregnancies': [pregnancies],
#     'Glucose': [glucose],
#     'BloodPressure': [blood_pressure],
#     'SkinThickness': [skin_thickness],
#     'Insulin': [insulin],
#     'BMI': [BMI],
#     'DiabetesPedigreeFunction': [dpf],
#     'Age': [age]
# })
# 
# # Scaling input user
# user_scaled = scaler.transform(user_data)
# 
# # Prediksi
# prediction = model.predict(user_scaled)
# proba = model.predict_proba(user_scaled)
# 
# # Tampilkan hasil prediksi
# st.subheader("Hasil Analisis:")
# if prediction[0] == 1:
#     st.error("Model memprediksi pasien memiliki **risiko tinggi terkena diabetes**.")
# else:
#     st.success("Model menunjukkan bahwa pasien memiliki **risiko rendah terhadap diabetes**.")
# 
# # Penjelasan faktor risiko
# st.subheader("Faktor yang Mempengaruhi Prediksi:")
# factors = []
# 
# if glucose > 140:
#     factors.append("Kadar glukosa tergolong tinggi.")
# if BMI > 30:
#     factors.append("BMI di atas normal, mengarah ke obesitas.")
# if age > 45:
#     factors.append("Usia di atas 45 tahun meningkatkan risiko.")
# if insulin > 200:
#     factors.append("Insulin tinggi, kemungkinan resistensi insulin.")
# if pregnancies >= 3:
#     factors.append("Lebih dari dua kehamilan meningkatkan risiko.")
# if dpf > 1:
#     factors.append("Riwayat keluarga menunjukkan kecenderungan diabetes.")
# 
# if factors:
#     for f in factors:
#         st.markdown(f"- {f}")
# else:
#     st.write("Tidak ditemukan faktor risiko signifikan dari parameter yang dimasukkan.")
# 
# # Pie Chart visualisasi
# st.subheader("Distribusi Faktor Risiko:")
# labels = ['Risiko Ditemukan', 'Faktor Aman']
# sizes = [len(factors), 6 - len(factors)]
# colors = ['#f44336', '#4caf50']
# 
# fig, ax = plt.subplots()
# ax.pie(sizes, labels=labels, colors=colors, autopct='%1.0f%%', startangle=90)
# ax.axis('equal')
# st.pyplot(fig)
# 
# # Tampilkan akurasi model
# acc = accuracy_score(y_test, model.predict(X_test))
# st.markdown(f"üìä **Akurasi Model Random Forest:** `{acc * 100:.2f}%`")
#

from pyngrok import ngrok
ngrok.kill()

import streamlit as st
from pyngrok import ngrok
import os, time

os.system("streamlit run datasains.py &")
time.sleep(5)
print("üåê Streamlit URL:", ngrok.connect(8501))
